/*
SuprSend API

SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

The version of the OpenAPI document: 1.2.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner } from './workflow-configure-trigger-request-users-inner-androidpush-inner';
import { WorkflowConfigureTriggerRequestUsersInnerIospushInner } from './workflow-configure-trigger-request-users-inner-iospush-inner';

/**
 * 
 * @export
 * @interface WorkflowConfigureTriggerRequestUsersInner
 */
export interface WorkflowConfigureTriggerRequestUsersInner {
    /**
     * unique identifier of the user
     * @type {string}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    'distinct_id': string;
    /**
     * send notification on selected channels in user profile. Following channel keys can be used: email, sms, whatsapp, androidpush, iospush, slack, webpush
     * @type {Array<string>}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    '$channels'?: Array<string>;
    /**
     * To trigger notification on a particular email
     * @type {Array<string>}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    '$email'?: Array<string>;
    /**
     * Send SMS on a particular number.
     * @type {Array<string>}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    '$sms'?: Array<string>;
    /**
     * Send Whatsapp on a particular number.
     * @type {Array<string>}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    '$whatsapp'?: Array<string>;
    /**
     * Send androidpush on the given push token
     * @type {Array<WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner>}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    '$androidpush'?: Array<WorkflowConfigureTriggerRequestUsersInnerAndroidpushInner>;
    /**
     * Send iOSpush on the given push token
     * @type {Array<WorkflowConfigureTriggerRequestUsersInnerIospushInner>}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    '$iospush'?: Array<WorkflowConfigureTriggerRequestUsersInnerIospushInner>;
    /**
     * Send Slack on a particular channel in user\'s profile. Use one of the methods to add slack token - 1. slack using email: {\"email\": \"user@example.com\", \"access_token\": \"xoxb-XXXXXXXX\"} ------ 2. slack using member_id: {\"user_id\": \"U/WXXXXXXXX\", \"access_token\": \"xoxb-XXXXXXXX\"} ------- 3. slack channel: {\"channel\": \"CXXXXXXXX\", \"access_token\": \"xoxb-XXXXXXXX\"} -------- 4. slack incoming webhook: {\"incoming_webhook\": { \"url\": \"https://hooks.slack.com/services/TXXXXXXXXX/BXXXXXXXX/XXXXXXXXXXXXXXXXXXX\"}}
     * @type {string}
     * @memberof WorkflowConfigureTriggerRequestUsersInner
     */
    '$slack'?: string;
}

