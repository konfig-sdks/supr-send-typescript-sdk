/*
SuprSend API

SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

The version of the OpenAPI document: 1.2.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * delivery instructions for the workflow. You can set [Smart Delivery](https://docs.suprsend.com/docs/smart-delivery) preference by setting \"smart\":true
 * @export
 * @interface WorkflowConfigureTriggerRequestDelivery
 */
export interface WorkflowConfigureTriggerRequestDelivery {
    /**
     * You can enable smart delivery by setting \"smart\":True
     * @type {boolean}
     * @memberof WorkflowConfigureTriggerRequestDelivery
     */
    'smart'?: boolean;
    /**
     * Measure that defines the success of this notification. You can set notification status like delivery, interaction or custom success event
     * @type {string}
     * @memberof WorkflowConfigureTriggerRequestDelivery
     */
    'success'?: string;
    /**
     * Time window for triggering notifications in case of smart delivery. notification on each channel will be sent with time-interval of [time_to_live / (number_of_channels - 1)] apart. Format - XXdXXhXXmXXs or if its number (n) then delay is in seconds (n)
     * @type {string}
     * @memberof WorkflowConfigureTriggerRequestDelivery
     */
    'time_to_live'?: string;
    /**
     * Channels on which notification has to be sent immediately in case of smart delivery. Following channel keys can be used: email, sms, whatsapp, androidpush, iospush, slack, webpush
     * @type {Array<string>}
     * @memberof WorkflowConfigureTriggerRequestDelivery
     */
    'mandatory_channels'?: Array<string>;
}

