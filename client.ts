/*
SuprSend API

SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

The version of the OpenAPI document: 1.2.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  BrandApi,
  BroadcastApi,
  EventApi,
  PrefCategoryApi,
  PreferenceApi,
  SubscriberApi,
  SubscriberListApi,
  SyncApi,
  TemplateApi,
  WorkflowApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { SuprSendCustom } from "./client-custom";

export class SuprSend extends SuprSendCustom {
  readonly brand: BrandApi;
  readonly broadcast: BroadcastApi;
  readonly event: EventApi;
  readonly prefCategory: PrefCategoryApi;
  readonly preference: PreferenceApi;
  readonly subscriber: SubscriberApi;
  readonly subscriberList: SubscriberListApi;
  readonly sync: SyncApi;
  readonly template: TemplateApi;
  readonly workflow: WorkflowApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.brand = new BrandApi(configuration);
    this.broadcast = new BroadcastApi(configuration);
    this.event = new EventApi(configuration);
    this.prefCategory = new PrefCategoryApi(configuration);
    this.preference = new PreferenceApi(configuration);
    this.subscriber = new SubscriberApi(configuration);
    this.subscriberList = new SubscriberListApi(configuration);
    this.sync = new SyncApi(configuration);
    this.template = new TemplateApi(configuration);
    this.workflow = new WorkflowApi(configuration);
  }

}
